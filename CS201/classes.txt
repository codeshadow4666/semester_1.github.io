..............................................................................


Syntax:


class mth
{
private:
    string a;
public:
  void input(void);
  void display(void);
  void display(string a);
  void test(void);
  void ones(void);
 
};
// input data 
void mth::input(void){
    cout<<"\nenter any no. ";
    cin>>a;
    cout<<endl;
    test();
ones();
    display();
}

...................................................................
......................at().........................................
this function is used to get character  in a string in certain 
location like a array 

example:

  for (int i = 0; i < a.length(); i++)
    {
        if ((a.at(i) != '1')&&(a.at(i)!='0'))
        {
            cout<<"Incorrect Binary Format";
            exit(0);
        }
        
        /* code */
    }
...................................................................
...................................................................
..........................Freind Funcitoins.........................
/* Properties of friend functions
1. Not in the scope of class
2. since it is not in the scope of the class, it cannot be called 
from the object of that class. c1.sumComplex() == Invalid
3. Can be invoked without the help of any object
4. Usually contans the objects as arguments
5. Can be declared inside public or private section of the class
6. It cannot access the members directly by their names and need 
object_name.member_name to access any member.

*/
...................................................................

                      Constructor
...................................................................
/* Characteristics of Constructors
1. It should be declared in the public section of the class
2. They are automatically invoked whenever the object is created
3. They cannot return values and do not have return types
4. It can have default arguments
5. We cannot refer to their address I
*/   

default Constructor:

                    take no arguments or parameters;

parameterized constructor:       take arguments;
                    